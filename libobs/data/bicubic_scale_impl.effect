#ifdef MATRIX_FUNCTIONS
#define PIXEL_FUNC pixel_matrix
#define GET_LINE_FUNC get_line_matrix
#define DRAW_BICUBIC_FUNC DrawBicubicMatrix
#else
#define PIXEL_FUNC pixel
#define GET_LINE_FUNC get_line
#define DRAW_BICUBIC_FUNC DrawBicubic
#endif

float4 PIXEL_FUNC(float xpos, float ypos, bool undistort, bool from601, bool from709)
{
	float4 sample = undistort ?
		image.Sample(textureSampler, pixel_coord(xpos, ypos)) :
		image.Sample(textureSampler, float2(xpos, ypos));

#ifdef MATRIX_FUNCTIONS
	const float3 yuv = clamp(sample.xyz, color_range_min, color_range_max);
	sample = saturate(mul(float4(yuv, 1.0), color_matrix));
#endif

	if (from601)
	{
		sample = float4(Gamma601ToGammaSrgb(sample.rgb), sample.a);
	}
	else if (from709)
	{
		sample = float4(Gamma709ToGammaSrgb(sample.rgb), sample.a);
	}

	return sample;
}

float4 GET_LINE_FUNC(float ypos, float4 xpos, float4 linetaps, bool undistort, bool from601, bool from709)
{
	return
		PIXEL_FUNC(xpos.r, ypos, undistort, from601, from709) * linetaps.r +
		PIXEL_FUNC(xpos.g, ypos, undistort, from601, from709) * linetaps.g +
		PIXEL_FUNC(xpos.b, ypos, undistort, from601, from709) * linetaps.b +
		PIXEL_FUNC(xpos.a, ypos, undistort, from601, from709) * linetaps.a;
}

float4 DRAW_BICUBIC_FUNC(VertData v_in, bool undistort, bool from601, bool from709)
{
	float2 stepxy = base_dimension_i;
	float2 pos = v_in.uv + stepxy * 0.5;
	float2 f = frac(pos / stepxy);

	float4 rowtaps = weight4(1.0 - f.x);
	float4 coltaps = weight4(1.0 - f.y);

	/* make sure all taps added together is exactly 1.0, otherwise some
 	 * (very small) distortion can occur */
	rowtaps /= rowtaps.r + rowtaps.g + rowtaps.b + rowtaps.a;
	coltaps /= coltaps.r + coltaps.g + coltaps.b + coltaps.a;

	float2 xystart = (-1.5 - f) * stepxy + pos;
	float4 xpos = float4(
		xystart.x,
		xystart.x + stepxy.x,
		xystart.x + stepxy.x * 2.0,
		xystart.x + stepxy.x * 3.0
	);

	return
		GET_LINE_FUNC(xystart.y                 , xpos, rowtaps, undistort, from601, from709) * coltaps.r +
		GET_LINE_FUNC(xystart.y + stepxy.y      , xpos, rowtaps, undistort, from601, from709) * coltaps.g +
		GET_LINE_FUNC(xystart.y + stepxy.y * 2.0, xpos, rowtaps, undistort, from601, from709) * coltaps.b +
		GET_LINE_FUNC(xystart.y + stepxy.y * 3.0, xpos, rowtaps, undistort, from601, from709) * coltaps.a;
}

#undef PIXEL_FUNC
#undef GET_LINE_FUNC
#undef DRAW_BICUBIC_FUNC
